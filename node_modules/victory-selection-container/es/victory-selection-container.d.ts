import React from "react";
import { Datum, VictoryContainerProps, VictoryEventHandler } from "victory-core";
export interface VictorySelectionContainerProps extends VictoryContainerProps {
    activateSelectedData?: boolean;
    allowSelection?: boolean;
    disable?: boolean;
    onSelection?: (points: {
        childName?: string | string[];
        eventKey?: string | number;
        data?: Datum[];
    }[], bounds: {
        x: number | Date;
        y: number | Date;
    }[], props: VictorySelectionContainerProps) => void;
    horizontal?: boolean;
    onSelectionCleared?: (props: VictorySelectionContainerProps) => void;
    selectionBlacklist?: string[];
    selectionComponent?: React.ReactElement;
    selectionDimension?: "x" | "y";
    selectionStyle?: React.CSSProperties;
}
export declare const VICTORY_SELECTION_CONTAINER_DEFAULT_PROPS: {
    activateSelectedData: boolean;
    allowSelection: boolean;
    selectionComponent: JSX.Element;
    selectionStyle: {
        stroke: string;
        fill: string;
        fillOpacity: number;
    };
};
export declare const useVictorySelectionContainer: (initialProps: VictorySelectionContainerProps) => {
    props: {
        x1: number;
        x2: number;
        y1: number;
        y2: number;
        activateSelectedData: boolean;
        allowSelection: boolean;
        disable?: boolean | undefined;
        onSelection?: ((points: {
            childName?: string | string[];
            eventKey?: string | number;
            data?: Datum[];
        }[], bounds: {
            x: number | Date;
            y: number | Date;
        }[], props: VictorySelectionContainerProps) => void) | undefined;
        horizontal?: boolean | undefined;
        onSelectionCleared?: ((props: VictorySelectionContainerProps) => void) | undefined;
        selectionBlacklist?: string[] | undefined;
        selectionComponent: JSX.Element;
        selectionDimension?: "x" | "y" | undefined;
        selectionStyle: React.CSSProperties | {
            stroke: string;
            fill: string;
            fillOpacity: number;
        };
        "aria-describedby"?: string | undefined;
        "aria-labelledby"?: string | undefined;
        children?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactElement<any, string | React.JSXElementConstructor<any>>[] | undefined;
        className?: string | undefined;
        containerId?: string | number | undefined;
        containerRef?: React.Ref<HTMLElement> | undefined;
        desc?: string | undefined;
        events?: React.DOMAttributes<any> | undefined;
        height?: number | undefined;
        name?: string | undefined;
        origin?: import("victory-core").OriginType | undefined;
        polar?: boolean | undefined;
        portalComponent?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | undefined;
        portalZIndex?: number | undefined;
        preserveAspectRatio?: string | undefined;
        responsive?: boolean | undefined;
        role?: string | undefined;
        scale?: {
            x?: import("victory-core").D3Scale<any> | undefined;
            y?: import("victory-core").D3Scale<any> | undefined;
        } | undefined;
        style?: React.CSSProperties | undefined;
        tabIndex?: number | undefined;
        theme?: import("victory-core").VictoryThemeDefinition | undefined;
        title?: string | undefined;
        width?: number | undefined;
        ouiaId?: string | number | undefined;
        ouiaSafe?: boolean | undefined;
        ouiaType?: string | undefined;
    };
    children: React.ReactElement<any, string | React.JSXElementConstructor<any>>[];
};
export declare const VictorySelectionContainer: {
    (initialProps: VictorySelectionContainerProps): JSX.Element;
    role: string;
    defaultEvents(initialProps: VictorySelectionContainerProps): {
        target: string;
        eventHandlers: {
            onMouseDown: VictoryEventHandler;
            onTouchStart: VictoryEventHandler;
            onMouseMove: VictoryEventHandler;
            onTouchMove: VictoryEventHandler;
            onMouseUp: VictoryEventHandler;
            onTouchEnd: VictoryEventHandler;
        };
    }[];
};
//# sourceMappingURL=victory-selection-container.d.ts.map